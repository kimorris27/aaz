<?xml version='1.0' encoding='utf-8'?>
<CodeGen plane="mgmt-plane">
  <resource id="/{scope}/providers/microsoft.authorization/roleassignments/{}" version="2022-04-01" swagger="mgmt-plane/authorization/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cy97cm9sZUFzc2lnbm1lbnROYW1lfQ==/V/MjAyMi0wNC0wMQ=="/>
  <commandGroup name="role assignment">
    <command name="show" version="2022-04-01">
      <resource id="/{scope}/providers/microsoft.authorization/roleassignments/{}" version="2022-04-01" swagger="mgmt-plane/authorization/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cy97cm9sZUFzc2lnbm1lbnROYW1lfQ==/V/MjAyMi0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.roleAssignmentName" options="role-assignment-name" required="True">
          <help short="The name of the role assignment. It can be any valid GUID."/>
        </arg>
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"/>
        </arg>
        <arg type="string" var="$Query.tenantId" options="tenant-id">
          <help short="Tenant ID for cross-tenant request"/>
        </arg>
      </argGroup>
      <operation operationId="RoleAssignments_Get">
        <http path="/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="roleAssignmentName" arg="$Path.roleAssignmentName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <param type="string" name="tenantId" arg="$Query.tenantId"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="condition"/>
                    <prop type="string" name="conditionVersion"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="dateTime" name="createdOn"/>
                    <prop type="string" name="delegatedManagedIdentityResourceId"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="principalId" required="True"/>
                    <prop type="string" name="principalType">
                      <default value="&quot;User&quot;"/>
                      <enum>
                        <item value="&quot;Device&quot;"/>
                        <item value="&quot;ForeignGroup&quot;"/>
                        <item value="&quot;Group&quot;"/>
                        <item value="&quot;ServicePrincipal&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="roleDefinitionId" required="True"/>
                    <prop readOnly="True" type="string" name="scope"/>
                    <prop readOnly="True" type="string" name="updatedBy"/>
                    <prop readOnly="True" type="dateTime" name="updatedOn"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="delete" version="2022-04-01" confirmation="Are you sure you want to perform this operation?">
      <resource id="/{scope}/providers/microsoft.authorization/roleassignments/{}" version="2022-04-01" swagger="mgmt-plane/authorization/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cy97cm9sZUFzc2lnbm1lbnROYW1lfQ==/V/MjAyMi0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.roleAssignmentName" options="role-assignment-name" required="True">
          <help short="The name of the role assignment. It can be any valid GUID."/>
        </arg>
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"/>
        </arg>
        <arg type="string" var="$Query.tenantId" options="tenant-id">
          <help short="Tenant ID for cross-tenant request"/>
        </arg>
      </argGroup>
      <operation operationId="RoleAssignments_Delete">
        <http path="/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}">
          <request method="delete">
            <path>
              <param type="string" name="roleAssignmentName" arg="$Path.roleAssignmentName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <param type="string" name="tenantId" arg="$Query.tenantId"/>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="condition"/>
                    <prop type="string" name="conditionVersion"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="dateTime" name="createdOn"/>
                    <prop type="string" name="delegatedManagedIdentityResourceId"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="principalId" required="True"/>
                    <prop type="string" name="principalType">
                      <default value="&quot;User&quot;"/>
                      <enum>
                        <item value="&quot;Device&quot;"/>
                        <item value="&quot;ForeignGroup&quot;"/>
                        <item value="&quot;Group&quot;"/>
                        <item value="&quot;ServicePrincipal&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="roleDefinitionId" required="True"/>
                    <prop readOnly="True" type="string" name="scope"/>
                    <prop readOnly="True" type="string" name="updatedBy"/>
                    <prop readOnly="True" type="dateTime" name="updatedOn"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response statusCode="204"/>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
    </command>
    <command name="create" version="2022-04-01">
      <resource id="/{scope}/providers/microsoft.authorization/roleassignments/{}" version="2022-04-01" swagger="mgmt-plane/authorization/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cy97cm9sZUFzc2lnbm1lbnROYW1lfQ==/V/MjAyMi0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.roleAssignmentName" options="role-assignment-name" required="True">
          <help short="The name of the role assignment. It can be any valid GUID."/>
        </arg>
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg type="string" var="$parameters.properties.condition" options="condition" group="Properties">
          <help short="The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"/>
        </arg>
        <arg type="string" var="$parameters.properties.conditionVersion" options="condition-version" group="Properties">
          <help short="Version of the condition. Currently the only accepted value is '2.0'"/>
        </arg>
        <arg type="string" var="$parameters.properties.delegatedManagedIdentityResourceId" options="delegated-managed-identity-resource-id" group="Properties">
          <help short="Id of the delegated managed identity resource"/>
        </arg>
        <arg type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Description of role assignment"/>
        </arg>
        <arg type="string" var="$parameters.properties.principalId" options="principal-id" required="True" group="Properties">
          <help short="The principal ID."/>
        </arg>
        <arg type="string" var="$parameters.properties.principalType" options="principal-type" group="Properties">
          <help short="The principal type of the assigned principal ID."/>
          <default value="&quot;User&quot;"/>
          <enum>
            <item name="Device" value="&quot;Device&quot;"/>
            <item name="ForeignGroup" value="&quot;ForeignGroup&quot;"/>
            <item name="Group" value="&quot;Group&quot;"/>
            <item name="ServicePrincipal" value="&quot;ServicePrincipal&quot;"/>
            <item name="User" value="&quot;User&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.roleDefinitionId" options="role-definition-id" required="True" group="Properties">
          <help short="The role definition ID."/>
        </arg>
      </argGroup>
      <operation operationId="RoleAssignments_Create">
        <http path="/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="roleAssignmentName" arg="$Path.roleAssignmentName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json>
                <schema type="object" name="parameters" required="True" clientFlatten="True">
                  <prop type="object" name="properties" required="True" clientFlatten="True">
                    <prop type="string" name="condition" arg="$parameters.properties.condition"/>
                    <prop type="string" name="conditionVersion" arg="$parameters.properties.conditionVersion"/>
                    <prop type="string" name="delegatedManagedIdentityResourceId" arg="$parameters.properties.delegatedManagedIdentityResourceId"/>
                    <prop type="string" name="description" arg="$parameters.properties.description"/>
                    <prop type="string" name="principalId" arg="$parameters.properties.principalId" required="True"/>
                    <prop type="string" name="principalType" arg="$parameters.properties.principalType">
                      <default value="&quot;User&quot;"/>
                      <enum>
                        <item value="&quot;Device&quot;"/>
                        <item value="&quot;ForeignGroup&quot;"/>
                        <item value="&quot;Group&quot;"/>
                        <item value="&quot;ServicePrincipal&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="roleDefinitionId" arg="$parameters.properties.roleDefinitionId" required="True"/>
                  </prop>
                </schema>
              </json>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="object">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="condition"/>
                    <prop type="string" name="conditionVersion"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="dateTime" name="createdOn"/>
                    <prop type="string" name="delegatedManagedIdentityResourceId"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="principalId" required="True"/>
                    <prop type="string" name="principalType">
                      <default value="&quot;User&quot;"/>
                      <enum>
                        <item value="&quot;Device&quot;"/>
                        <item value="&quot;ForeignGroup&quot;"/>
                        <item value="&quot;Group&quot;"/>
                        <item value="&quot;ServicePrincipal&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="roleDefinitionId" required="True"/>
                    <prop readOnly="True" type="string" name="scope"/>
                    <prop readOnly="True" type="string" name="updatedBy"/>
                    <prop readOnly="True" type="dateTime" name="updatedOn"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
    <command name="update" version="2022-04-01">
      <resource id="/{scope}/providers/microsoft.authorization/roleassignments/{}" version="2022-04-01" swagger="mgmt-plane/authorization/ResourceProviders/Microsoft.Authorization/Paths/L3tzY29wZX0vcHJvdmlkZXJzL01pY3Jvc29mdC5BdXRob3JpemF0aW9uL3JvbGVBc3NpZ25tZW50cy97cm9sZUFzc2lnbm1lbnROYW1lfQ==/V/MjAyMi0wNC0wMQ=="/>
      <argGroup name="">
        <arg type="string" var="$Path.roleAssignmentName" options="role-assignment-name" required="True">
          <help short="The name of the role assignment. It can be any valid GUID."/>
        </arg>
        <arg type="string" var="$Path.scope" options="scope" required="True">
          <help short="The scope of the operation or resource. Valid scopes are: subscription (format: '/subscriptions/{subscriptionId}'), resource group (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}', or resource (format: '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/[{parentResourcePath}/]{resourceType}/{resourceName}'"/>
        </arg>
      </argGroup>
      <argGroup name="Properties">
        <arg nullable="True" type="string" var="$parameters.properties.condition" options="condition" group="Properties">
          <help short="The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase 'foo_storage_container'"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.conditionVersion" options="condition-version" group="Properties">
          <help short="Version of the condition. Currently the only accepted value is '2.0'"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.delegatedManagedIdentityResourceId" options="delegated-managed-identity-resource-id" group="Properties">
          <help short="Id of the delegated managed identity resource"/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.description" options="description" group="Properties">
          <help short="Description of role assignment"/>
        </arg>
        <arg type="string" var="$parameters.properties.principalId" options="principal-id" group="Properties">
          <help short="The principal ID."/>
        </arg>
        <arg nullable="True" type="string" var="$parameters.properties.principalType" options="principal-type" group="Properties">
          <help short="The principal type of the assigned principal ID."/>
          <enum>
            <item name="Device" value="&quot;Device&quot;"/>
            <item name="ForeignGroup" value="&quot;ForeignGroup&quot;"/>
            <item name="Group" value="&quot;Group&quot;"/>
            <item name="ServicePrincipal" value="&quot;ServicePrincipal&quot;"/>
            <item name="User" value="&quot;User&quot;"/>
          </enum>
        </arg>
        <arg type="string" var="$parameters.properties.roleDefinitionId" options="role-definition-id" group="Properties">
          <help short="The role definition ID."/>
        </arg>
      </argGroup>
      <operation operationId="RoleAssignments_Get">
        <http path="/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}">
          <request method="get">
            <path>
              <param type="string" name="roleAssignmentName" arg="$Path.roleAssignmentName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
          </request>
          <response statusCode="200">
            <body>
              <json var="$Instance">
                <schema type="object" cls="RoleAssignment_read">
                  <prop readOnly="True" type="ResourceId" name="id"/>
                  <prop readOnly="True" type="string" name="name"/>
                  <prop type="object" name="properties" clientFlatten="True">
                    <prop type="string" name="condition"/>
                    <prop type="string" name="conditionVersion"/>
                    <prop readOnly="True" type="string" name="createdBy"/>
                    <prop readOnly="True" type="dateTime" name="createdOn"/>
                    <prop type="string" name="delegatedManagedIdentityResourceId"/>
                    <prop type="string" name="description"/>
                    <prop type="string" name="principalId" required="True"/>
                    <prop type="string" name="principalType">
                      <default value="&quot;User&quot;"/>
                      <enum>
                        <item value="&quot;Device&quot;"/>
                        <item value="&quot;ForeignGroup&quot;"/>
                        <item value="&quot;Group&quot;"/>
                        <item value="&quot;ServicePrincipal&quot;"/>
                        <item value="&quot;User&quot;"/>
                      </enum>
                    </prop>
                    <prop type="string" name="roleDefinitionId" required="True"/>
                    <prop readOnly="True" type="string" name="scope"/>
                    <prop readOnly="True" type="string" name="updatedBy"/>
                    <prop readOnly="True" type="dateTime" name="updatedOn"/>
                  </prop>
                  <prop readOnly="True" type="string" name="type"/>
                </schema>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <operation>
        <instanceUpdate ref="$Instance">
          <json>
            <schema type="object" name="parameters" required="True" clientFlatten="True">
              <prop type="object" name="properties" required="True" clientFlatten="True">
                <prop type="string" name="condition" arg="$parameters.properties.condition"/>
                <prop type="string" name="conditionVersion" arg="$parameters.properties.conditionVersion"/>
                <prop type="string" name="delegatedManagedIdentityResourceId" arg="$parameters.properties.delegatedManagedIdentityResourceId"/>
                <prop type="string" name="description" arg="$parameters.properties.description"/>
                <prop type="string" name="principalId" arg="$parameters.properties.principalId" required="True"/>
                <prop type="string" name="principalType" arg="$parameters.properties.principalType">
                  <default value="&quot;User&quot;"/>
                  <enum>
                    <item value="&quot;Device&quot;"/>
                    <item value="&quot;ForeignGroup&quot;"/>
                    <item value="&quot;Group&quot;"/>
                    <item value="&quot;ServicePrincipal&quot;"/>
                    <item value="&quot;User&quot;"/>
                  </enum>
                </prop>
                <prop type="string" name="roleDefinitionId" arg="$parameters.properties.roleDefinitionId" required="True"/>
              </prop>
            </schema>
          </json>
        </instanceUpdate>
      </operation>
      <operation operationId="RoleAssignments_Create">
        <http path="/{scope}/providers/Microsoft.Authorization/roleAssignments/{roleAssignmentName}">
          <request method="put">
            <path>
              <param type="string" name="roleAssignmentName" arg="$Path.roleAssignmentName" required="True" skipUrlEncoding="True"/>
              <param type="string" name="scope" arg="$Path.scope" required="True" skipUrlEncoding="True"/>
            </path>
            <query>
              <const readOnly="True" const="True" type="string" name="api-version" required="True">
                <default value="&quot;2022-04-01&quot;"/>
                <format minLength="1"/>
              </const>
            </query>
            <body>
              <json ref="$Instance"/>
            </body>
          </request>
          <response statusCode="200 201">
            <body>
              <json var="$Instance">
                <schema type="@RoleAssignment_read"/>
              </json>
            </body>
          </response>
          <response isError="True">
            <body>
              <json>
                <schema type="@MgmtErrorFormat"/>
              </json>
            </body>
          </response>
        </http>
      </operation>
      <output type="object" ref="$Instance" clientFlatten="True"/>
    </command>
  </commandGroup>
</CodeGen>
